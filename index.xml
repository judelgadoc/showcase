<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase</title><link>https://judelgadoc.github.io/visualcomputing/</link><description>Recent content in Introduction on Showcase</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://judelgadoc.github.io/visualcomputing/index.xml" rel="self" type="application/rss+xml"/><item><title>Daniel Armando Zúñiga Espinosa</title><link>https://judelgadoc.github.io/visualcomputing/posts/member03/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/posts/member03/</guid><description>Sobre mí # Tengo muchos intereses, entren los que puedo destacar el aprender constantemente cosas nuevas, relacionadas con el mundo de la programación y la tecnología, no obstante, como el ser integral que me considero, poseo un interés particular por las ciencias humanas, política, filosofía y las artes. Soy bastante friki y me encanta la cultura pop y a lo que yo llamo visiones artísticas actuales. Como seres visuales, la imagen es la forma de entendimiento más fuerte que tenemos, por lo que este curso es de mi especial atención.</description></item><item><title>Juan Pablo Delgado Cárcamo</title><link>https://judelgadoc.github.io/visualcomputing/posts/member01/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/posts/member01/</guid><description>Sobre el curso # Estudio Ingenieria de Sistemas y Computación, respecto al curso me interesa aprender desde un punto de vista más teórico lo que significa la Computación Visual. Como cualquier persona, aprecio mucho la enseñanza por medio de la práctica, pero soy una persona que no se aburre con las explicaciones teóricas y les saco mucho provecho.
Mi interés en cuanto a la computación va encaminado en la infraestructura computacional, en particular las redes de telecomunicaciones y qué impacto podrían tener los campos de investigación de moda actualmente, como IA o Computación cuántica, en esta área.</description></item><item><title>Kevin Jair Gonzalez Sánchez</title><link>https://judelgadoc.github.io/visualcomputing/posts/member02/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/posts/member02/</guid><description>Sobre mí # Soy una persona con mucha pasion por la tecnologia y el arte, desde pequeño me han interesado mucho estos dos campos y espero a futuro poderme dedicar a algo que los involucre a ambos, ademas, tengo un gran interes por los videojuegos y la lectura, por ultimo, espero aprender bastantes cosas con el curso ya que me parece de bastante valor los temas que se manejan</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/001/</guid><description>Exercise 01 # Study, implement and discuss possible applications of some known visual phenomena and optical illusions. Ejemplo 1: visualizador de música # Introducción # El ejemplo del visualizador de música es una aplicación interactiva que permite visualizar la música de una manera gráfica. Este tipo de aplicaciones son muy utilizadas en la industria de la música para mejorar la experiencia del usuario, así como para la creación de contenido audiovisual.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/002/</guid><description>Exercise 02 # Implement a color mapping application that helps people who are color blind see the colors around them. Presentación # Toda la información, métodos de simulación y corrección fueron obtenidos del artículo: An Adaptive Fuzzy-Based System to Simulate, Quantify and Compensate Color Blindness 1
Introducción # El daltonismo es un conjunto de patologías de la visión que se caracterizan por una reducción total o parcial de la capacidad de percibir algunos colores o en casos extremos, como la Acromatopsia2, de todos los colores; a nivel físico, esto se traduce en la imposibilidad o dificultad de alguno de los 3 fotoreceptores del ojo (Rojo para frecuencias de luz bajas, Verde para frecuencias de luz medias y Azules para frecuencias de luz altas) para percibir dichos espectros</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/004/</guid><description>Exercise 04 # Develop a terrain visualization application. Check out the 3D terrain generation with Perlin noise coding train tutorial. Introducción # El generador de paisajes aleatorios es un ejemplo interesante de computación visual para generar paisajes únicos y aleatorios. En algunos casos el usuario puede interactuar con la visualización para generar paisajes más complejos o sencillos, dependiendo de sus preferencias. Este tipo de generador puede ser útil en la creación de videojuegos, diseño de paisajes y animación.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/005/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/005/</guid><description>Exercise 05 # Implement a kinegram and some moiré patterns which are close related visual phenomena to masking. Introducción # Los kinegramas son una técnica de animación que se caracteriza por la utilización de patrones de líneas y formas para crear la ilusión de movimiento. En la actualidad, esta técnica se sigue utilizando en diferentes campos, como en la seguridad de billetes de banco, la animación de personajes, entre otros.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/008/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/008/</guid><description>Exercise 08 # Implement a pixelator video application and perform a benchmark of the results (color avg vs spatial coherence). How would you assess the visual quality of the results? Introduction # A pixel is any of the small discrete elements that together constitute an image (as on a television or digital screen), the word Pixelated is used to describe digital images in which individual pixels are discernable, as when you look closely at a large photo and can see the tiny dots that make up the image.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/video/</guid><description>Video Problem set 1 # El siguiente video es el resumen, demora un poco en cargar.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/001/</guid><description> Exercise 01 # Study a hidden surface determination algorithm such as the painter’s algorithm, binary space partitioning, the Warnock algorithm or ray casting. Introducción # Antecedentes # Consideraciones # Código # Conclusiones # Trabajo futuro # Referencias #</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/002/</guid><description> Exercise 02 # Figure it out the js code of the above sketches. Implement other blending modes. Take this reference as starting point. Introducción # Antecedentes # Consideraciones # Código # Conclusiones # Trabajo futuro # Referencias #</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/003/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/003/</guid><description> Exercise 03 # Implement other coloring brightness tools such as HSV value V, HSL lightness L or Component average. Implement texture tinting by mixing color and texel interpolated data. Introducción # Antecedentes # Consideraciones # Código # Conclusiones # Trabajo futuro # Referencias #</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/004/</guid><description>Exercise 04 # Implement an image / video processing app supporting different masks, including other kernel sizes different than 3x3, and:
A region-of-interest base tool to selectively apply a given mask.Hint: circular regions around the mouse pointer are handy and quite simple to implement by means of glsl distance. A magnifier tool. Requires a bit of research. For instance, look for it in shadertoy. Integrate luma and other coloring brightness tools.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/005/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/005/</guid><description> Exercise 05 # Adapt other patterns from the book of shaders (refer also to the shadertoy collection) and map them as textures onto other 3D shapes. Introducción # Antecedentes # Consideraciones # Código # Conclusiones # Trabajo futuro # Referencias #</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/006/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/006/</guid><description> Exercise 06 # Implement your own source dataset and a mechanism to select different images from it. Implement a pixelator in software that doesn’t use spatial coherence and compare the results with those obtained here. Introducción # Antecedentes # Consideraciones # Código # Conclusiones # Trabajo futuro # Referencias #</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/007/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/007/</guid><description> Exercise 07 # Implement a mosaic visual application. Introducción # Antecedentes # Consideraciones # Código # Conclusiones # Trabajo futuro # Referencias #</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/008/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/008/</guid><description> Exercise 08 # Implement some posteffects you find interesting. Introducción # Antecedentes # Consideraciones # Código # Conclusiones # Trabajo futuro # Referencias #</description></item><item><title>Procesamiento de imágenes</title><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/image-processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/image-processing/</guid><description>Ejercicio # Implement an image / video processing app supporting different masks, including other kernel sizes different than 3x3, and:
A region-of-interest base tool to selectively apply a given mask.Hint: circular regions around the mouse pointer are handy and quite simple to implement by means of glsl distance. A magnifier tool. Requires a bit of research. For instance, look for it in shadertoy. Integrate luma and other coloring brightness tools.</description></item></channel></rss>