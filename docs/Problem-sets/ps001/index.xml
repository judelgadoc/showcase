<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Problem set 1 on Showcase</title><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/</link><description>Recent content in Problem set 1 on Showcase</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/001/</guid><description>Exercise 01 # Study, implement and discuss possible applications of some known visual phenomena and optical illusions. Ejemplo 1: visualizador de música # Introducción # El ejemplo del visualizador de música es una aplicación interactiva que permite visualizar la música de una manera gráfica. Este tipo de aplicaciones son muy utilizadas en la industria de la música para mejorar la experiencia del usuario, así como para la creación de contenido audiovisual.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/002/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/002/</guid><description>Exercise 02 # Implement a color mapping application that helps people who are color blind see the colors around them. Presentación # Toda la información, métodos de simulación y corrección fueron obtenidos del artículo: An Adaptive Fuzzy-Based System to Simulate, Quantify and Compensate Color Blindness 1
Introducción # El daltonismo es un conjunto de patologías de la visión que se caracterizan por una reducción total o parcial de la capacidad de percibir algunos colores o en casos extremos, como la Acromatopsia2, de todos los colores; a nivel físico, esto se traduce en la imposibilidad o dificultad de alguno de los 3 fotoreceptores del ojo (Rojo para frecuencias de luz bajas, Verde para frecuencias de luz medias y Azules para frecuencias de luz altas) para percibir dichos espectros</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/004/</guid><description>Exercise 04 # Develop a terrain visualization application. Check out the 3D terrain generation with Perlin noise coding train tutorial. Introducción # El generador de paisajes aleatorios es un ejemplo interesante de computación visual para generar paisajes únicos y aleatorios. En algunos casos el usuario puede interactuar con la visualización para generar paisajes más complejos o sencillos, dependiendo de sus preferencias. Este tipo de generador puede ser útil en la creación de videojuegos, diseño de paisajes y animación.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/005/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/005/</guid><description>Exercise 05 # Implement a kinegram and some moiré patterns which are close related visual phenomena to masking. Introducción # Los kinegramas son una técnica de animación que se caracteriza por la utilización de patrones de líneas y formas para crear la ilusión de movimiento. En la actualidad, esta técnica se sigue utilizando en diferentes campos, como en la seguridad de billetes de banco, la animación de personajes, entre otros.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/008/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/008/</guid><description>Exercise 08 # Implement a pixelator video application and perform a benchmark of the results (color avg vs spatial coherence). How would you assess the visual quality of the results? Introduction # A pixel is any of the small discrete elements that together constitute an image (as on a television or digital screen), the word Pixelated is used to describe digital images in which individual pixels are discernable, as when you look closely at a large photo and can see the tiny dots that make up the image.</description></item><item><title/><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps001/video/</guid><description>Video Problem set 1 # El siguiente video es el resumen, demora un poco en cargar.</description></item></channel></rss>