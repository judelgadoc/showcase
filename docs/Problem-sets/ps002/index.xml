<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Problem set 2 on Showcase</title><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/</link><description>Recent content in Problem set 2 on Showcase</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/index.xml" rel="self" type="application/rss+xml"/><item><title>Determinación de superficies</title><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/001/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/001/</guid><description>Ejercicio # Study a hidden surface determination algorithm such as the painter’s algorithm, binary space partitioning, the Warnock algorithm or ray casting. Introducción # Problema de visiblización # En geometría, la visibilidad es una abstracción matemática de la visibilidad real, que consiste en, dado un conjunto de obstáculos en el espacio euclidiano, se dice que dos puntos en el espacio son visibles entre sí si el segmento de línea que los une, no intersecta ningún obstáculo.</description></item><item><title>Procesamiento de imágenes</title><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/image-processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/image-processing/</guid><description>Ejercicio # Implement an image / video processing app supporting different masks, including other kernel sizes different than 3x3, and:
A region-of-interest base tool to selectively apply a given mask.Hint: circular regions around the mouse pointer are handy and quite simple to implement by means of glsl distance. A magnifier tool. Requires a bit of research. For instance, look for it in shadertoy. Integrate luma and other coloring brightness tools.</description></item><item><title>Proyecto visual</title><link>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://judelgadoc.github.io/visualcomputing/docs/Problem-sets/ps002/project/</guid><description>Interior Designer 3D: Diseño de interiores con p5.js # Introducción # “Interior Designer 3D” es un programa en p5.js que podría permitir diseñar y visualizar interiores en 3D. Con controles intuitivos, se puede ajustar la posición de muebles, tales como una mesa, una cama y una planta de decoración, para crear nuestros propios diseños de interiores virtuales. Podría ser útil para profesionales del diseño y decoración, así como para experimentar con la decoración de espacios.</description></item></channel></rss>